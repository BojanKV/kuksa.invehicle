In file included from jsoncons/include/jsoncons/pretty_print.hpp:20:0,
                 from jsoncons/include/jsoncons/basic_json.hpp:27,
                 from jsoncons/include/jsoncons/json.hpp:10,
                 from demo.cpp:6:
jsoncons/include/jsoncons/json_type_traits.hpp: In instantiation of ‘static Json jsoncons::json_type_traits<Json, T, Enable>::to_json(const T&, jsoncons::json_type_traits<Json, T, Enable>::allocator_type) [with Json = jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >; T = std::nullptr_t; Enable = void; jsoncons::json_type_traits<Json, T, Enable>::allocator_type = std::allocator<char>]’:
jsoncons/include/jsoncons/basic_json.hpp:2922:55:   required from ‘jsoncons::basic_json<CharT, ImplementationPolicy, Allocator>::basic_json(const T&) [with T = std::nullptr_t; CharT = char; ImplementationPolicy = jsoncons::sorted_policy; Allocator = std::allocator<char>]’
trompeloeil.hpp:1076:14:   required from ‘constexpr bool trompeloeil::is_null(const T&, std::true_type) [with T = jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >; std::true_type = std::integral_constant<bool, true>]’
trompeloeil.hpp:1104:34:   required from ‘void trompeloeil::print(std::ostream&, const T&) [with T = jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >; std::ostream = std::basic_ostream<char>]’
trompeloeil.hpp:2825:25:   required from ‘void trompeloeil::missed_value(std::ostream&, int, const T&) [with T = jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >; std::ostream = std::basic_ostream<char>]’
trompeloeil.hpp:2836:67:   required from ‘void trompeloeil::stream_params(std::ostream&, std::index_sequence<I ...>, const std::tuple<_Elements ...>&) [with long unsigned int ...I = {0, 1}; T = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&}; std::ostream = std::basic_ostream<char>; std::index_sequence<I ...> = std::integer_sequence<long unsigned int, 0, 1>]’
trompeloeil.hpp:2845:18:   required from ‘void trompeloeil::stream_params(std::ostream&, const std::tuple<_Tps ...>&) [with T = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&}; std::ostream = std::basic_ostream<char>]’
trompeloeil.hpp:2978:18:   required from ‘void trompeloeil::report_mismatch(trompeloeil::call_matcher_list<Sig>&, trompeloeil::call_matcher_list<Sig>&, const string&, trompeloeil::call_params_type_t<Sig>&) [with Sig = int(std::__cxx11::basic_string<char>, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&); std::__cxx11::string = std::__cxx11::basic_string<char>; trompeloeil::call_params_type_t<Sig> = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&>]’
trompeloeil.hpp:3927:22:   required from ‘trompeloeil::return_of_t<Sig> trompeloeil::mock_func(std::true_type, trompeloeil::expectations<movable, Sig>&, const char*, const char*, P&& ...) [with bool movable = false; Sig = int(std::__cxx11::basic_string<char>, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&); P = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const jsoncons::basic_json<char, jsoncons::sorted_policy, std::allocator<char> >&}; trompeloeil::return_of_t<Sig> = int; std::true_type = std::integral_constant<bool, true>]’
demo.cpp:38:3:   required from here
jsoncons/include/jsoncons/json_type_traits.hpp:84:9: error: static assertion failed: to_json not implemented
         static_assert(unimplemented<T>::value, "to_json not implemented");
         ^~~~~~~~~~~~~
